DESCRIPTION

Emacs minor mode for quick compilation and running of Java programs.

This is a convenient and light-weight minor mode, which allows to
compile and run Java programs without much disruption of work flow. It
is mostly intended to be used with small and medium sized command line
programs, like the exercises one is supposed to write in first
programming courses.


INSTALLATION

If you use package.el, and configured it to use marmalade
(http://marmalade-repo.org/), this package can be installed via:

    M-x package-install RET javarun RET

Otherwise, download javarun.el, put its directory on your load-path
and require it:

    (add-to-list 'load-path "/path/to/javarun/")
    (require 'javarun)

If you want javarun-mode to be activated automatically whenever
java-mode runs, add it to the java-mode-hook:

    (add-hook 'java-mode-hook
              (lambda ()
                (javarun-mode 1)))

If the javac and java programs are not on your system path, you will
also have to set the path to the executables:

    (setq javarun-java-path "/path/to/java/installation/")

Add these forms to your .emacs, and evaluate each of them by putting
the cursor after them and typing C-x C-e. Otherwise, save the file and
restart Emacs.

The javarun-java-path and a few other options can also be set using
M-x customize-group RET javarun RET. You might want to check this out
to see which other customizations are available.


USAGE

Javarun provides the command javarun (bound to C-c C-c by default),
which compiles the Java file you're editing. On success, it runs the
program, and shows its output in a popup buffer. Otherwise, the
compiler error messages are shown.

If invoked with a prefix argument, command line arguments can be
passed to the program. They are read as a whitespace-separated list of
Emacs Lisp expressions, so strings have to be quoted.

For example, C-u C-c C-c RET "foo bar" (+ 1 2) "bar" RET will try to
compile the file of the current buffer and, if successful, passes the
command line arguments "foo bar", 3, and "baz" to the program.

The popup buffer can be closed by pressing 'q', and the former window
configuration will be restored.
